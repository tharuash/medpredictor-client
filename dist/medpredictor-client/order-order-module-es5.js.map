{"version":3,"sources":["src/app/order/components/dashboard/dashboard.component.html","src/app/order/components/history/history.component.html","src/app/order/components/dashboard/dashboard.component.css","src/app/order/components/dashboard/dashboard.component.ts","src/app/order/components/history/history.component.css","src/app/order/components/history/history.component.ts","src/app/order/order-routing.module.ts","src/app/order/order.module.ts","src/app/services/prediction.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div id=\\\"NextOrder\\\" class=\\\"tabcontent\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-12 p-2 align-self-center\\\">\\n        <form [formGroup]=\\\"predictForm\\\" (submit)=\\\"predict()\\\">\\n            <label for=\\\"medicine\\\">Medicine</label>\\n            <select id=\\\"medicine\\\" name=\\\"medicine\\\" formControlName=\\\"medicine\\\" required>\\n              <option value=\\\"adorastatin\\\">Adorastatin 10mg</option>\\n              <option value=\\\"metformin\\\">Metfromin 500mg</option>\\n              <option value=\\\"losatank\\\">Lostan Potasium 50mg</option>\\n              <option value=\\\"aspirin\\\">Aspirin 75mg</option>\\n              <option value=\\\"niffidipine\\\">Niffidipine 20er</option>\\n            </select>\\n\\n            <label for=\\\"year\\\">Year</label>\\n            <input type=\\\"number\\\" name=\\\"year\\\" min=\\\"2015\\\" value=\\\"2021\\\" style=\\\"background: #ccc\\\" formControlName=\\\"year\\\" required />\\n\\n            <label for=\\\"month\\\">Month</label>\\n            <select id=\\\"month\\\" name=\\\"month\\\" formControlName=\\\"month\\\" required>\\n              <option value=\\\"1\\\">January</option>\\n              <option value=\\\"2\\\">February</option>\\n              <option value=\\\"3\\\">March</option>\\n              <option value=\\\"4\\\">April</option>\\n              <option value=\\\"5\\\">May</option>\\n              <option value=\\\"6\\\">June</option>\\n              <option value=\\\"7\\\">July</option>\\n              <option value=\\\"8\\\">August</option>\\n              <option value=\\\"9\\\">September</option>\\n              <option value=\\\"10\\\">October</option>\\n              <option value=\\\"11\\\">November</option>\\n              <option value=\\\"12\\\">December</option>\\n            </select>\\n\\n\\n            <h3 style=\\\"margin-top: 50px\\\">Be prepared for</h3>\\n            <div class=\\\"pl-5\\\">\\n\\n              <div class=\\\"radio\\\">\\n                <label><input type=\\\"radio\\\" name=\\\"option\\\" value=\\\"a\\\" formControlName=\\\"option\\\" checked>&nbsp;&nbsp;without any conditions</label>\\n              </div>\\n              <div class=\\\"radio disabled\\\">\\n                <label><input type=\\\"radio\\\" name=\\\"option\\\" value=\\\"b\\\" formControlName=\\\"option\\\">&nbsp;with current covid-19 situation</label>\\n              </div>\\n\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"bg-warning\\\">GET QUANTITY</button>\\n\\n          </form>\\n    </div>\\n    <div class=\\\"col-lg-4 col-12 align-self-center pl-5\\\">\\n      <div class=\\\"text-right\\\">\\n        <div class=\\\"text1\\\" *ngIf=\\\"predictedValue\\\">You should Order</div>\\n        <div class=\\\"text1\\\" *ngIf=\\\"!predictedValue\\\">Select Medicine and A Time</div>\\n        <div class=\\\"text2\\\" *ngIf=\\\"predictedValue\\\">{{predictedValue}} Boxes/Packs</div>\\n        <div class=\\\"text1\\\" *ngIf=\\\"!predictedValue\\\">To Get Predictions</div>\\n        <div class=\\\"text_a\\\">\\n          <button class=\\\"btn btn-primary w-50\\\" *ngIf=\\\"predictedValue\\\" (click)=\\\"seeWhy()\\\">see why>></button>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n\"","export default \"<div id=\\\"NextOrder\\\">\\n  <div class=\\\"row\\\">\\n    <form class=\\\"w-100\\\" [formGroup]=\\\"searchForm\\\" (submit)=\\\"search()\\\">\\n      <div class=\\\"form-group row\\\">\\n        <div class=\\\"col-sm-10\\\">\\n          <select id=\\\"medicine\\\" name=\\\"medicine\\\" formControlName=\\\"medicine\\\" class=\\\"form-control\\\" required>\\n            <option value=\\\"adorastatin\\\" selected>Adorastatin 10mg</option>\\n            <option value=\\\"metfromin\\\">Metfromin 500mg</option>\\n            <option value=\\\"lostan_potasium\\\">Lostan Potasium 50mg</option>\\n            <option value=\\\"aspirin\\\">Aspirin 75mg</option>\\n            <option value=\\\"niffidipine\\\">Niffidipine 20er</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\\"col-lg-6 col-12 p-2\\\">\\n      <div class=\\\"card\\\" style=\\\"color: black; margin: 8px\\\" *ngFor=\\\"let order of orderColumnOne\\\">\\n        <div class=\\\"card-header\\\">\\n          Order {{order.orderId}} {{order.medicine}}\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <!--h5 class=\\\"card-title\\\">Special title treatment</h5-->\\n          <p class=\\\"card-text\\\">Year : {{order.year}} <span style=\\\"float: right\\\">Month : {{months[order.month - 1]}}</span> </p>\\n          <p class=\\\"card-text\\\">Quantity : {{order.quantity}} packs <span style=\\\"color: blue\\\" *ngIf=\\\"order.isPredicted\\\">(A predicted value)</span><span style=\\\"color: red\\\" *ngIf=\\\"!order.isPredicted\\\">(A custom value)</span></p>\\n          <p class=\\\"card-text\\\" *ngIf=\\\"order.notes\\\">Notes : {{order.notes}} </p>\\n        </div>\\n      </div>\\n\\n\\n    </div>\\n    <div class=\\\"col-lg-6 col-12 p-2\\\">\\n            <div class=\\\"card\\\" style=\\\"color: black; margin: 8px\\\" *ngFor=\\\"let order of orderColumnTwo\\\">\\n                    <div class=\\\"card-header\\\">\\n                      Order {{order.orderId}}  {{order.medicine}}\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                      <!--h5 class=\\\"card-title\\\">Special title treatment</h5-->\\n                      <p class=\\\"card-text\\\">Year : {{order.year}} <span style=\\\"float: right\\\">Month : {{months[order.month - 1]}}</span> </p>\\n                      <p class=\\\"card-text\\\">Quantity : {{order.quantity}} packs <span style=\\\"color: blue\\\" *ngIf=\\\"order.isPredicted\\\">(A predicted value)</span><span style=\\\"color: red\\\" *ngIf=\\\"!order.isPredicted\\\">(A custom value)</span></p>\\n                      <p class=\\\"card-text\\\" *ngIf=\\\"order.notes\\\">Notes : {{order.notes}} </p>\\n                    </div>\\n                  </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { FormBuilder } from '@angular/forms';\nimport { OrderService } from 'src/app/services/order.service';\nimport { PredictionRequest } from 'src/app/models/prediction.request';\nimport { Router } from '@angular/router';\nimport { PredictionService } from 'src/app/services/prediction.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  predictSubscriber: Subscription;\n  predictedValue: number;\n  predictForm = this.formBuilder.group({\n    medicine: 'adorastatin',\n    year: 2021,\n    month: 1,\n    option: ['a'],\n  });\n  predictionSubscription: Subscription;\n  selectedMedicine;\n  selectedOption;\n\n  constructor(private formBuilder: FormBuilder, private predictionService: PredictionService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  predict() {\n    this.selectedMedicine = this.predictForm.value.medicine;\n    this.selectedOption = this.predictForm.value.option[0];\n    const predictionRequest: PredictionRequest = {\n      medicine: this.predictForm.value.medicine,\n      year: this.predictForm.value.year,\n      month: this.predictForm.value.month,\n      withCovid: this.selectedOption == 'b' ? true : false,\n    };\n\n    this.predictionSubscription = this.predictionService.getPrediction(predictionRequest).subscribe(\n      data => {\n        if (data.success) {\n          this.predictedValue = parseFloat(data.prediction.toFixed(0));\n        } else {\n          alert('Prediction Failed, Please Try again');\n        }\n      },\n      error => {\n        console.log(error.message);\n      }\n    );\n  }\n\n  seeWhy() {\n    if (this.selectedMedicine) {\n      const medicine = this.selectedMedicine + '_' + this.selectedOption + '_' + this.predictedValue + '_' +this.predictForm.value.year + '_' + this.predictForm.value.month;\n      this.router.navigate(['/seewhy', medicine]);\n    } else {\n      alert('Please do a prediction first');\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2NvbXBvbmVudHMvaGlzdG9yeS9oaXN0b3J5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order';\nimport { OrderService } from 'src/app/services/order.service';\nimport { Subscription } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n  orders: Order[];\n  orderColumnOne: Order[];\n  orderColumnTwo: Order[];\n  ordersSubscription: Subscription;\n  months = ['Januray', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  searchForm = this.formBuilder.group({\n    medicine: 'adorastatin'\n  });\n\n  constructor(private orderService: OrderService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.ordersSubscription = this.orderService.getOrderHistory().subscribe(\n      data => {\n        this.orders = data;\n        this.divideToOrderColumns(this.orders);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  divideToOrderColumns(orders: Order[]){\n    this.orderColumnOne = [];\n    this.orderColumnTwo = [];\n\n    let appenedColumn = 1;\n    orders.forEach( order => {\n      if (appenedColumn == 1){\n        this.orderColumnTwo.push(order);\n        appenedColumn = 2;\n      } else {\n        this.orderColumnOne.push(order);\n        appenedColumn = 1;\n      }\n\n    });\n  }\n\n  search(){\n    const orders = this.orders;\n    this.orderColumnOne = [];\n    this.orderColumnTwo = [];\n    let appenedColumn = 1;\n    orders.forEach( order => {\n      if( order.medicine == this.searchForm.value.medicine.toUpperCase()){\n        if (appenedColumn == 1) {\n          this.orderColumnTwo.push(order);\n          appenedColumn = 2;\n        } else {\n          this.orderColumnOne.push(order);\n          appenedColumn = 1;\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n   if(this.ordersSubscription){\n     this.ordersSubscription.unsubscribe();\n   }\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HistoryComponent } from './components/history/history.component';\nimport { RouteGuardService } from '../services/guards/route.guard.service';\n\n\nconst routes: Routes = [\n  {path: '', component: DashboardComponent, canActivate: [RouteGuardService]},\n  {path: 'history', component: HistoryComponent, canActivate: [RouteGuardService]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrderRoutingModule } from './order-routing.module';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HistoryComponent } from './components/history/history.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouteGuardService } from '../services/guards/route.guard.service';\n\n\n@NgModule({\n  declarations: [DashboardComponent, HistoryComponent],\n  imports: [\n    CommonModule,\n    OrderRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [RouteGuardService]\n})\nexport class OrderModule { }\n","import { Injectable } from '@angular/core';\nimport { PredictionRequest } from '../models/prediction.request';\nimport { PredictionResponse } from '../models/prediction.response';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PredictionService {\n\n  constructor(private http: HttpClient) { }\n\n  getPrediction(predictionRequest: PredictionRequest): Observable<PredictionResponse> {\n    const url = environment.flaskAPIUrl + `/predict`;\n    return this.http.post<PredictionResponse>(url, predictionRequest);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"order-order-module-es5.js"}